 Passo a passo para resolver:



1. Crie uma fun√ß√£o utilit√°ria para "limpar" o nome do produto:



import os
import unicodedata
 
def formatar_nome_arquivo(nome_produto):
    # Remove acentos
    nome = unicodedata.normalize('NFKD', nome_produto).encode('ASCII', 'ignore').decode('ASCII')
    
    # Substitui espa√ßos por +
    nome = nome.replace(" ", "+")
 
    # Remove outros caracteres problem√°ticos (opcional)
    nome = ''.join(c for c in nome if c.isalnum() or c in ['+', '-', '_'])
 
    return f"{nome}.jpg"


2. Utilize essa fun√ß√£o para montar o caminho da imagem:



produto = "T√™nis Feminino"
nome_arquivo = formatar_nome_arquivo(produto)  # "Tenis+Feminino.jpg"
caminho_imagem = os.path.join("imagem", nome_arquivo)
 
if os.path.exists(caminho_imagem):
    print("Imagem encontrada:", caminho_imagem)
else:
    print("Imagem N√ÉO encontrada:", caminho_imagem)


‚úÖ Alternativas:



üîÅ 1. Listar arquivos do diret√≥rio e procurar por correspond√™ncia:

Se os nomes variam (por exemplo, T√™nis_Feminino.jpg, Tenis-Feminino.jpg, etc.), voc√™ pode fazer algo assim:



import os
 
produto = "T√™nis Feminino"
diretorio = "imagem"
 
for nome_arquivo in os.listdir(diretorio):
    if produto.lower().replace(" ", "") in nome_arquivo.lower().replace(" ", "").replace("+", "").replace("-", ""):
        caminho_imagem = os.path.join(diretorio, nome_arquivo)
        print("Imagem correspondente encontrada:", caminho_imagem)
        break


‚úÖ Considera√ß√µes Finais:

- Garanta que os nomes dos arquivos estejam padronizados (ex: todos com + ou _ em vez de espa√ßos).

- Remova acentos e caracteres especiais dos nomes dos arquivos se poss√≠vel.

- Padronize a forma de salvar e procurar os  arquivos para evitar erros.



Perfeito! Com base nas duas imagens que voc√™ compartilhou, e no comportamento do os.path.exists() retornando False mesmo com o nome de arquivo aparentemente correto, vamos fazer uma an√°lise minuciosa.



‚úÖ O que j√° foi verificado:

O caminho gerado √©: imagem\Tenis+Feminino.jpg

O nome do arquivo foi manualmente renomeado sem acento.

O caminho est√° sendo constru√≠do corretamente com os.path.join.



‚ö†Ô∏è Mas os.path.exists(caminho_imagem) continua retornando False.



üîç Poss√≠veis causas reais e como corrigir



1. O arquivo pode estar com uma extens√£o diferente (como .JPG, .jpeg ou .JPEG)

O Windows √© case-insensitive (ignora mai√∫sculas/min√∫sculas), mas o Python n√£o.



‚úÖ Solu√ß√£o:

Liste os arquivos do diret√≥rio e veja os nomes reais, com letras exatas, incluindo a extens√£o:



import os
 
print("Arquivos na pasta 'imagem':")
for nome in os.listdir("imagem"):
    print(nome)


Se aparecer por exemplo Tenis+Feminino.JPG e n√£o .jpg, √© esse o problema.



2. Espa√ßos invis√≠veis ou caracteres ocultos no nome do arquivo

√Äs vezes o nome do arquivo cont√©m um caractere invis√≠vel (ex: espa√ßo no final, caractere especial invis√≠vel etc).



‚úÖ Solu√ß√£o:



Use este c√≥digo para comparar diretamente com o conte√∫do do diret√≥rio:



import os
 
produto = "Tenis+Feminino.jpg"
arquivos = os.listdir("imagem")
 
for arquivo in arquivos:
    print(f"'{arquivo}'")
 
if produto in arquivos:
    print("Nome EXATO encontrado:", produto)
else:
    print("Nome n√£o encontrado. Verifique poss√≠veis diferen√ßas.")




3. Erro de encoding (acento na pasta ou caminho completo)

Mesmo que o nome do arquivo esteja correto, se alguma parte do caminho (incluindo pastas como C:\Usu√°rio\...) tiver caracteres com acento mal interpretados, o Python pode n√£o encontrar.



‚úÖ Solu√ß√£o:



Garanta que o terminal e o VSCode estejam em UTF-8.



Teste com caminho absoluto e sem acento:



import os
 
# Caminho absoluto para teste
caminho_absoluto = r"C:\python_projetos\python_rpa_projetos\imagem\Tenis+Feminino.jpg"
 
if os.path.exists(caminho_absoluto):
    print("Imagem encontrada com caminho absoluto!")
else:
    print("Imagem N√ÉO encontrada nem com caminho absoluto!")




4. Confirma√ß√£o do diret√≥rio de execu√ß√£o (voc√™ pode estar em outro diret√≥rio)



Pode ser que o script esteja sendo executado em um diret√≥rio diferente daquele que cont√©m a pasta imagem.



‚úÖ Verifique com:



print("Diret√≥rio atual:", os.getcwd())


Se o diret√≥rio n√£o for o mesmo onde est√° a pasta imagem, o caminho relativo falhar√°.



‚úÖ Solu√ß√£o alternativa segura:



import os
 
base_dir = os.path.dirname(__file__)  # Pega o caminho onde o script est√° salvo
caminho_imagem = os.path.join(base_dir, "imagem", "Tenis+Feminino.jpg")
 
if os.path.exists(caminho_imagem):
    print("Imagem encontrada com caminho absoluto relativo ao script!")
else:
    print("Ainda n√£o encontrou. Caminho:", caminho_imagem)




‚úÖ Resumo das a√ß√µes que voc√™ deve executar agora:

- Liste os arquivos da pasta imagem com os.listdir() e veja se o nome bate exatamente.

- Verifique a extens√£o e a caixa (mai√∫sculas/min√∫sculas) ‚Äî .jpg vs .JPG.

- Use o caminho absoluto para eliminar erros de encoding e diret√≥rio de trabalho.

- Imprima o diret√≥rio atual com os.getcwd() para confirmar que a execu√ß√£o est√° no local correto.

- (Opcional) Padronize todos os arquivos da pasta imagem com nomes sem acento e em min√∫sculas.




import os
from PIL import Image
 
# Suponha que o nome do produto j√° foi tratado e normalizado
produto = "T√™nis Feminino"
nome_arquivo = f"{produto.replace(' ', '+').replace('√™', 'e').replace('√≠', 'i')}.jpg"
caminho_imagem = os.path.join("imagem", nome_arquivo)
 
try:
    imagem = Image.open(caminho_imagem)
    print("Imagem encontrada e carregada:", caminho_imagem)
except FileNotFoundError:
    print("Imagem N√ÉO encontrada:", caminho_imagem)


‚úÖ Alternativa ainda mais robusta: buscar pela imagem por similaridade no nome



Se voc√™ n√£o quiser depender de nomes exatamente iguais, pode usar os.listdir() com in para encontrar o arquivo:



import os
 
def localizar_imagem(produto, pasta="imagem"):
    produto_base = produto.lower().replace(" ", "").replace("√™", "e").replace("√≠", "i")
 
    for nome in os.listdir(pasta):
        nome_base = nome.lower().replace(" ", "").replace("+", "").replace("-", "").replace("√™", "e").replace("√≠", "i")
        if produto_base in nome_base:
            return os.path.join(pasta, nome)
    return None
 
# Exemplo de uso:
produto = "T√™nis Feminino"
caminho_imagem = localizar_imagem(produto)
 
if caminho_imagem and os.path.exists(caminho_imagem):
    print("Imagem localizada:", caminho_imagem)
else:
    print("Imagem N√ÉO encontrada para:", produto)
